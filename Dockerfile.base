FROM ubuntu:focal

ARG L4T_RELEASE_MAJOR=32.7
ARG L4T_RELEASE_MINOR=1
ARG CUDA=10.2
ARG DEBIAN_FRONTEND=noninteractive
ARG SOC="t194"

ARG L4T_RELEASE=$L4T_RELEASE_MAJOR.$L4T_RELEASE_MINOR

RUN apt-get update && \
    apt-get install -y --no-install-recommends apt-utils software-properties-common mesa-utils && \
    apt-get upgrade -y && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

#
# Jetson debian packages
#
RUN echo $L4T_RELEASE_MAJOR
ADD --chown=root:root https://repo.download.nvidia.com/jetson/jetson-ota-public.asc /etc/apt/trusted.gpg.d/jetson-ota-public.asc
RUN chmod 644 /etc/apt/trusted.gpg.d/jetson-ota-public.asc && \
    apt-get update && apt-get install -y --no-install-recommends ca-certificates && \
    echo "deb https://repo.download.nvidia.com/jetson/common r$L4T_RELEASE_MAJOR main" > /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    echo "deb https://repo.download.nvidia.com/jetson/${SOC} r$L4T_RELEASE_MAJOR main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

#
# Tegra setup
#

# RUN ln -s /usr/local/cuda-$CUDA /usr/local/cuda && \
#     ln -s /usr/local/cuda-$CUDA/targets/aarch64-linux/include /usr/local/cuda/include && \
#     ln -s /usr/local/cuda-$CUDA/targets/aarch64-linux/lib /usr/local/cuda/lib64

RUN echo "/usr/local/cuda-$CUDA/targets/aarch64-linux/lib" >> /etc/ld.so.conf.d/nvidia.conf
RUN mkdir -p /usr/share/egl/egl_external_platform.d/ && \
    echo '{    "file_format_version" : "1.0.0",    "ICD" : {        "library_path" : "libnvidia-egl-wayland.so.1"    }}' > /usr/share/egl/egl_external_platform.d/nvidia_wayland.json
RUN mkdir -p /usr/share/glvnd/egl_vendor.d/ && echo '{    "file_format_version" : "1.0.0",    "ICD" : {        "library_path" : "libEGL_nvidia.so.0"    }}' > /usr/share/glvnd/egl_vendor.d/10_nvidia.json
RUN echo "/usr/lib/aarch64-linux-gnu/tegra" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/lib/aarch64-linux-gnu/tegra-egl" >> /etc/ld.so.conf.d/nvidia-tegra.conf
RUN apt-get update && \
    apt-get install -qq -y --no-install-recommends     bc     bzip2     can-utils     ca-certificates     freeglut3-dev     gnupg2     gstreamer1.0-alsa     gstreamer1.0-libav     gstreamer1.0-plugins-bad     gstreamer1.0-plugins-base     gstreamer1.0-plugins-good     gstreamer1.0-plugins-ugly     gstreamer1.0-tools     i2c-tools     iw     kbd     kmod     language-pack-en-base     libapt-pkg-dev     libcanberra-gtk3-module     libgles2     libglu1-mesa-dev     libglvnd-dev     libgtk-3-0     libpython2.7     libudev1     libvulkan1     libzmq5     mtd-utils     parted     pciutils     python     python-pexpect     python3-distutils     sox     udev     vulkan-utils     wget     wireless-tools wpasupplicant && \
        rm -rf /var/lib/apt/lists/* && \
        apt-get clean

#
# Update environment
#
ENV PATH /usr/local/cuda-$CUDA/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/cuda-$CUDA/targets/aarch64-linux/lib:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/opt/nvidia/vpi1/lib64:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/tegra:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/tegra-egl:${LD_LIBRARY_PATH}

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all
ENV OPENBLAS_CORETYPE=ARMV8

WORKDIR /root
CMD ["bash"]
